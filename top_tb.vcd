$date
	Fri Aug 09 10:50:41 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module top_tb $end
$var wire 32 ! n_exe_instr [31:0] $end
$var wire 32 " n_cycle [31:0] $end
$var parameter 32 # N $end
$var reg 1 $ clk $end
$var reg 1 % n_rst $end
$scope module cpu $end
$var wire 1 $ clk $end
$var wire 1 % n_rst $end
$var wire 1 & wr_mem_fwd $end
$var wire 1 ' wr_en_mem $end
$var wire 1 ( wb_wr_en_reg $end
$var wire 32 ) wb_wr_data [31:0] $end
$var wire 32 * wb_rd_mem_data [31:0] $end
$var wire 5 + wb_rd_id [4:0] $end
$var wire 7 , wb_opcode [6:0] $end
$var wire 32 - wb_link_pc [31:0] $end
$var wire 3 . wb_instr_type [2:0] $end
$var wire 32 / wb_alu_res [31:0] $end
$var wire 2 0 rs2_fwd [1:0] $end
$var wire 2 1 rs1_fwd [1:0] $end
$var wire 1 2 pc_stall $end
$var wire 1 3 pc2reg $end
$var wire 1 4 mem2reg $end
$var wire 2 5 m_wb_ctr [1:0] $end
$var wire 5 6 m_rs2_id [4:0] $end
$var wire 32 7 m_rs2_data [31:0] $end
$var wire 32 8 m_rd_mem_data [31:0] $end
$var wire 5 9 m_rd_id [4:0] $end
$var wire 7 : m_opcode [6:0] $end
$var wire 32 ; m_link_pc [31:0] $end
$var wire 3 < m_instr_type [2:0] $end
$var wire 3 = m_funct [2:0] $end
$var wire 32 > m_alu_res [31:0] $end
$var wire 32 ? if_pc [31:0] $end
$var wire 32 @ if_instr [31:0] $end
$var wire 2 A if_id_ctr [1:0] $end
$var wire 32 B id_target_pc [31:0] $end
$var wire 5 C id_rs2_id [4:0] $end
$var wire 32 D id_rs2_data [31:0] $end
$var wire 5 E id_rs1_id [4:0] $end
$var wire 32 F id_rs1_data [31:0] $end
$var wire 5 G id_rd_id [4:0] $end
$var wire 32 H id_pc [31:0] $end
$var wire 7 I id_opcode [6:0] $end
$var wire 32 J id_link_pc [31:0] $end
$var wire 3 K id_instr_type [2:0] $end
$var wire 32 L id_instr [31:0] $end
$var wire 32 M id_imm [31:0] $end
$var wire 4 N id_funct [3:0] $end
$var wire 2 O id_ex_ctr [1:0] $end
$var wire 1 P id_br_pred $end
$var wire 32 Q ex_target_pc [31:0] $end
$var wire 5 R ex_rs2_id [4:0] $end
$var wire 32 S ex_rs2_data [31:0] $end
$var wire 5 T ex_rs1_id [4:0] $end
$var wire 32 U ex_rs1_data [31:0] $end
$var wire 32 V ex_rel_target_pc [31:0] $end
$var wire 5 W ex_rd_id [4:0] $end
$var wire 32 X ex_pc [31:0] $end
$var wire 7 Y ex_opcode [6:0] $end
$var wire 2 Z ex_m_ctr [1:0] $end
$var wire 32 [ ex_link_pc [31:0] $end
$var wire 3 \ ex_instr_type [2:0] $end
$var wire 32 ] ex_imm [31:0] $end
$var wire 32 ^ ex_fwd_rs2_data [31:0] $end
$var wire 32 _ ex_fwd_rs1_data [31:0] $end
$var wire 4 ` ex_funct [3:0] $end
$var wire 1 a ex_br_pred $end
$var wire 1 b ex_alu_zero $end
$var wire 32 c ex_alu_res [31:0] $end
$var wire 1 d ex_alu_lt $end
$var wire 1 e br_taken $end
$var wire 1 f alu_src_imm $end
$var wire 1 g alu_op1_zero $end
$var wire 1 h alu_op1_pc $end
$var reg 32 i n_cycle [31:0] $end
$var reg 32 j n_exe_instr [31:0] $end
$scope module controller $end
$var wire 1 f alu_src_imm $end
$var wire 3 k br_funct [2:0] $end
$var wire 1 l id_br_pred $end
$var wire 1 3 pc2reg $end
$var wire 1 ( wb_wr_reg $end
$var wire 1 & wr_mem_fwd $end
$var wire 1 ' wr_mem $end
$var wire 5 m wb_rd_id [4:0] $end
$var wire 7 n wb_opcode [6:0] $end
$var wire 3 o wb_instr_type [2:0] $end
$var wire 1 4 mem2reg $end
$var wire 5 p m_rs2_id [4:0] $end
$var wire 5 q m_rd_id [4:0] $end
$var wire 7 r m_opcode [6:0] $end
$var wire 1 s load_stall $end
$var wire 1 t jalr $end
$var wire 1 u jal $end
$var wire 7 v id_opcode [6:0] $end
$var wire 5 w ex_rs2_id [4:0] $end
$var wire 5 x ex_rs1_id [4:0] $end
$var wire 7 y ex_opcode [6:0] $end
$var wire 3 z ex_instr_type [2:0] $end
$var wire 1 a ex_br_pred $end
$var wire 1 { br_pred_taken $end
$var wire 1 | br_mispred $end
$var wire 1 b alu_zero $end
$var wire 1 g alu_op1_zero $end
$var wire 1 h alu_op1_pc $end
$var wire 1 d alu_lt $end
$var reg 1 e br_taken $end
$var reg 2 } ex_m_ctr [1:0] $end
$var reg 2 ~ id_ex_ctr [1:0] $end
$var reg 2 !" if_id_ctr [1:0] $end
$var reg 2 "" m_wb_ctr [1:0] $end
$var reg 1 2 pc_stall $end
$var reg 2 #" rs1_fwd [1:0] $end
$var reg 2 $" rs2_fwd [1:0] $end
$scope module ex_inst_ty $end
$var wire 7 %" opcode [6:0] $end
$var reg 3 &" instr_type [2:0] $end
$upscope $end
$scope module wb_inst_ty $end
$var wire 7 '" opcode [6:0] $end
$var reg 3 (" instr_type [2:0] $end
$upscope $end
$upscope $end
$scope module ex_m_reg $end
$var wire 1 $ clk $end
$var wire 2 )" ctr [1:0] $end
$var wire 3 *" in_funct [2:0] $end
$var wire 1 % n_rst $end
$var wire 5 +" out_rs2_id [4:0] $end
$var wire 32 ," out_rs2_data [31:0] $end
$var wire 5 -" out_rd_id [4:0] $end
$var wire 32 ." out_pc [31:0] $end
$var wire 7 /" out_opcode [6:0] $end
$var wire 3 0" out_instr_type [2:0] $end
$var wire 3 1" out_funct [2:0] $end
$var wire 32 2" out_alu_res [31:0] $end
$var wire 5 3" in_rs2_id [4:0] $end
$var wire 32 4" in_rs2_data [31:0] $end
$var wire 5 5" in_rd_id [4:0] $end
$var wire 32 6" in_pc [31:0] $end
$var wire 7 7" in_opcode [6:0] $end
$var wire 3 8" in_instr_type [2:0] $end
$var wire 32 9" in_alu_res [31:0] $end
$scope module alu_res_reg $end
$var wire 1 $ clk $end
$var wire 2 :" ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 32 ;" out [31:0] $end
$var wire 32 <" in [31:0] $end
$var parameter 32 =" bw $end
$var reg 32 >" content [31:0] $end
$upscope $end
$scope module funct_reg $end
$var wire 1 $ clk $end
$var wire 2 ?" ctr [1:0] $end
$var wire 3 @" in [2:0] $end
$var wire 1 % n_rst $end
$var wire 3 A" out [2:0] $end
$var parameter 32 B" bw $end
$var reg 3 C" content [2:0] $end
$upscope $end
$scope module instr_type_reg $end
$var wire 1 $ clk $end
$var wire 2 D" ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 3 E" out [2:0] $end
$var wire 3 F" in [2:0] $end
$var parameter 32 G" bw $end
$var reg 3 H" content [2:0] $end
$upscope $end
$scope module opcode_reg $end
$var wire 1 $ clk $end
$var wire 2 I" ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 7 J" out [6:0] $end
$var wire 7 K" in [6:0] $end
$var parameter 32 L" bw $end
$var reg 7 M" content [6:0] $end
$upscope $end
$scope module pc_reg $end
$var wire 1 $ clk $end
$var wire 2 N" ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 32 O" out [31:0] $end
$var wire 32 P" in [31:0] $end
$var parameter 32 Q" bw $end
$var reg 32 R" content [31:0] $end
$upscope $end
$scope module rd_id_reg $end
$var wire 1 $ clk $end
$var wire 2 S" ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 5 T" out [4:0] $end
$var wire 5 U" in [4:0] $end
$var parameter 32 V" bw $end
$var reg 5 W" content [4:0] $end
$upscope $end
$scope module rs2_data_reg $end
$var wire 1 $ clk $end
$var wire 2 X" ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 32 Y" out [31:0] $end
$var wire 32 Z" in [31:0] $end
$var parameter 32 [" bw $end
$var reg 32 \" content [31:0] $end
$upscope $end
$scope module rs2_id_reg $end
$var wire 1 $ clk $end
$var wire 2 ]" ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 5 ^" out [4:0] $end
$var wire 5 _" in [4:0] $end
$var parameter 32 `" bw $end
$var reg 5 a" content [4:0] $end
$upscope $end
$upscope $end
$scope module ex_stage $end
$var wire 1 h alu_op1_pc $end
$var wire 1 g alu_op1_zero $end
$var wire 1 f alu_src_imm $end
$var wire 1 $ clk $end
$var wire 1 b" funct_shift $end
$var wire 32 c" m_rd_data [31:0] $end
$var wire 5 d" m_rd_id [4:0] $end
$var wire 1 % n_rst $end
$var wire 32 e" out_rs1_data [31:0] $end
$var wire 32 f" out_rs2_data [31:0] $end
$var wire 2 g" rs1_fwd [1:0] $end
$var wire 2 h" rs2_fwd [1:0] $end
$var wire 5 i" wb_rd_id [4:0] $end
$var wire 32 j" wb_rd_data [31:0] $end
$var wire 32 k" rs2_data [31:0] $end
$var wire 32 l" rs1_data [31:0] $end
$var wire 32 m" pc [31:0] $end
$var wire 7 n" opcode [6:0] $end
$var wire 3 o" instr_type [2:0] $end
$var wire 32 p" imm [31:0] $end
$var wire 4 q" funct [3:0] $end
$var wire 5 r" ex_rs2_id [4:0] $end
$var wire 5 s" ex_rs1_id [4:0] $end
$var wire 1 b alu_zero $end
$var wire 32 t" alu_res [31:0] $end
$var wire 32 u" alu_op2 [31:0] $end
$var wire 32 v" alu_op1 [31:0] $end
$var wire 1 d alu_lt $end
$var wire 1 w" alu_funct_most_bit $end
$var reg 4 x" alu_funct [3:0] $end
$var reg 32 y" fwd_rs1_data [31:0] $end
$var reg 32 z" fwd_rs2_data [31:0] $end
$scope module alu $end
$var wire 4 {" funct [3:0] $end
$var wire 32 |" op1 [31:0] $end
$var wire 32 }" op2 [31:0] $end
$var wire 1 b zero $end
$var reg 32 ~" res [31:0] $end
$upscope $end
$upscope $end
$scope module id_ex_reg $end
$var wire 1 $ clk $end
$var wire 2 !# ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 5 "# out_rs2_id [4:0] $end
$var wire 32 ## out_rs2_data [31:0] $end
$var wire 5 $# out_rs1_id [4:0] $end
$var wire 32 %# out_rs1_data [31:0] $end
$var wire 5 &# out_rd_id [4:0] $end
$var wire 32 '# out_pc [31:0] $end
$var wire 7 (# out_opcode [6:0] $end
$var wire 32 )# out_link_pc [31:0] $end
$var wire 3 *# out_instr_type [2:0] $end
$var wire 32 +# out_imm [31:0] $end
$var wire 4 ,# out_funct [3:0] $end
$var wire 1 a out_br_pred $end
$var wire 32 -# out_br_pc [31:0] $end
$var wire 5 .# in_rs2_id [4:0] $end
$var wire 32 /# in_rs2_data [31:0] $end
$var wire 5 0# in_rs1_id [4:0] $end
$var wire 32 1# in_rs1_data [31:0] $end
$var wire 5 2# in_rd_id [4:0] $end
$var wire 32 3# in_pc [31:0] $end
$var wire 7 4# in_opcode [6:0] $end
$var wire 32 5# in_link_pc [31:0] $end
$var wire 3 6# in_instr_type [2:0] $end
$var wire 32 7# in_imm [31:0] $end
$var wire 4 8# in_funct [3:0] $end
$var wire 1 P in_br_pred $end
$var wire 32 9# in_br_pc [31:0] $end
$scope module br_pc_reg $end
$var wire 1 $ clk $end
$var wire 2 :# ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 32 ;# out [31:0] $end
$var wire 32 <# in [31:0] $end
$var parameter 32 =# bw $end
$var reg 32 ># content [31:0] $end
$upscope $end
$scope module br_pred_reg $end
$var wire 1 $ clk $end
$var wire 2 ?# ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 1 a out $end
$var wire 1 P in $end
$var parameter 32 @# bw $end
$var reg 1 a content $end
$upscope $end
$scope module funct_reg $end
$var wire 1 $ clk $end
$var wire 2 A# ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 4 B# out [3:0] $end
$var wire 4 C# in [3:0] $end
$var parameter 32 D# bw $end
$var reg 4 E# content [3:0] $end
$upscope $end
$scope module imm_reg $end
$var wire 1 $ clk $end
$var wire 2 F# ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 32 G# out [31:0] $end
$var wire 32 H# in [31:0] $end
$var parameter 32 I# bw $end
$var reg 32 J# content [31:0] $end
$upscope $end
$scope module instr_type_reg $end
$var wire 1 $ clk $end
$var wire 2 K# ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 3 L# out [2:0] $end
$var wire 3 M# in [2:0] $end
$var parameter 32 N# bw $end
$var reg 3 O# content [2:0] $end
$upscope $end
$scope module link_pc_reg $end
$var wire 1 $ clk $end
$var wire 2 P# ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 32 Q# out [31:0] $end
$var wire 32 R# in [31:0] $end
$var parameter 32 S# bw $end
$var reg 32 T# content [31:0] $end
$upscope $end
$scope module opcode_reg $end
$var wire 1 $ clk $end
$var wire 2 U# ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 7 V# out [6:0] $end
$var wire 7 W# in [6:0] $end
$var parameter 32 X# bw $end
$var reg 7 Y# content [6:0] $end
$upscope $end
$scope module pc_reg $end
$var wire 1 $ clk $end
$var wire 2 Z# ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 32 [# out [31:0] $end
$var wire 32 \# in [31:0] $end
$var parameter 32 ]# bw $end
$var reg 32 ^# content [31:0] $end
$upscope $end
$scope module rd_id_reg $end
$var wire 1 $ clk $end
$var wire 2 _# ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 5 `# out [4:0] $end
$var wire 5 a# in [4:0] $end
$var parameter 32 b# bw $end
$var reg 5 c# content [4:0] $end
$upscope $end
$scope module rs1_data_reg $end
$var wire 1 $ clk $end
$var wire 2 d# ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 32 e# out [31:0] $end
$var wire 32 f# in [31:0] $end
$var parameter 32 g# bw $end
$var reg 32 h# content [31:0] $end
$upscope $end
$scope module rs1_id_reg $end
$var wire 1 $ clk $end
$var wire 2 i# ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 5 j# out [4:0] $end
$var wire 5 k# in [4:0] $end
$var parameter 32 l# bw $end
$var reg 5 m# content [4:0] $end
$upscope $end
$scope module rs2_data_reg $end
$var wire 1 $ clk $end
$var wire 2 n# ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 32 o# out [31:0] $end
$var wire 32 p# in [31:0] $end
$var parameter 32 q# bw $end
$var reg 32 r# content [31:0] $end
$upscope $end
$scope module rs2_id_reg $end
$var wire 1 $ clk $end
$var wire 2 s# ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 5 t# out [4:0] $end
$var wire 5 u# in [4:0] $end
$var parameter 32 v# bw $end
$var reg 5 w# content [4:0] $end
$upscope $end
$upscope $end
$scope module id_stage $end
$var wire 1 $ clk $end
$var wire 1 % n_rst $end
$var wire 1 ( wb_wr_en_reg $end
$var wire 5 x# wb_wr_id [4:0] $end
$var wire 32 y# wb_wr_data [31:0] $end
$var wire 32 z# target_pc [31:0] $end
$var wire 5 {# rs2_id [4:0] $end
$var wire 32 |# rs2_data [31:0] $end
$var wire 5 }# rs1_id [4:0] $end
$var wire 32 ~# rs1_data [31:0] $end
$var wire 32 !$ pc [31:0] $end
$var wire 5 "$ out_rd_id [4:0] $end
$var wire 7 #$ opcode [6:0] $end
$var wire 32 $$ link_pc [31:0] $end
$var wire 3 %$ instr_type [2:0] $end
$var wire 32 &$ instr [31:0] $end
$var wire 32 '$ imm [31:0] $end
$var wire 4 ($ funct [3:0] $end
$var wire 1 P br_pred $end
$scope module br_predictor $end
$var wire 32 )$ imm [31:0] $end
$var wire 1 P br_pred $end
$upscope $end
$scope module imm_gen $end
$var wire 3 *$ instr_type [2:0] $end
$var wire 32 +$ instr [31:0] $end
$var reg 32 ,$ imm [31:0] $end
$upscope $end
$scope module inst_ty $end
$var wire 7 -$ opcode [6:0] $end
$var reg 3 .$ instr_type [2:0] $end
$upscope $end
$scope module reg_file $end
$var wire 1 $ clk $end
$var wire 1 % n_rst $end
$var wire 32 /$ r5_data [31:0] $end
$var wire 5 0$ rs1_id [4:0] $end
$var wire 5 1$ rs2_id [4:0] $end
$var wire 1 ( wb_wr_en $end
$var wire 5 2$ wb_wr_id [4:0] $end
$var wire 32 3$ wb_wr_data [31:0] $end
$var wire 32 4$ rs2_data [31:0] $end
$var wire 32 5$ rs1_data [31:0] $end
$var integer 32 6$ i [31:0] $end
$upscope $end
$upscope $end
$scope module if_id_reg $end
$var wire 1 $ clk $end
$var wire 2 7$ ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 32 8$ out_pc [31:0] $end
$var wire 32 9$ out_instr [31:0] $end
$var wire 32 :$ in_pc [31:0] $end
$var wire 32 ;$ in_instr [31:0] $end
$scope module instr_reg $end
$var wire 1 $ clk $end
$var wire 2 <$ ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 32 =$ out [31:0] $end
$var wire 32 >$ in [31:0] $end
$var parameter 32 ?$ bw $end
$var reg 32 @$ content [31:0] $end
$upscope $end
$scope module pc_reg $end
$var wire 1 $ clk $end
$var wire 2 A$ ctr [1:0] $end
$var wire 1 % n_rst $end
$var wire 32 B$ out [31:0] $end
$var wire 32 C$ in [31:0] $end
$var parameter 32 D$ bw $end
$var reg 32 E$ content [31:0] $end
$upscope $end
$upscope $end
$scope module if_stage $end
$var wire 1 $ clk $end
$var wire 1 a ex_br_pred $end
$var wire 1 e ex_br_taken $end
$var wire 32 F$ ex_link_pc [31:0] $end
$var wire 7 G$ ex_opcode [6:0] $end
$var wire 32 H$ ex_target_pc [31:0] $end
$var wire 1 P id_br_pred $end
$var wire 7 I$ id_opcode [6:0] $end
$var wire 32 J$ id_target_pc [31:0] $end
$var wire 1 % n_rst $end
$var wire 1 2 stall $end
$var wire 32 K$ out_pc [31:0] $end
$var wire 32 L$ instr [31:0] $end
$var reg 32 M$ next_pc [31:0] $end
$scope module counter $end
$var wire 1 $ clk $end
$var wire 1 % n_rst $end
$var wire 32 N$ next_pc [31:0] $end
$var reg 32 O$ out_pc [31:0] $end
$upscope $end
$scope module instr_mem $end
$var wire 32 P$ instr [31:0] $end
$var wire 10 Q$ pc [9:0] $end
$var parameter 208 R$ instr_path $end
$upscope $end
$upscope $end
$scope module m_stage $end
$var wire 32 S$ alu_res [31:0] $end
$var wire 1 $ clk $end
$var wire 3 T$ funct [2:0] $end
$var wire 32 U$ mem_addr [31:0] $end
$var wire 1 % n_rst $end
$var wire 32 V$ rs2_data [31:0] $end
$var wire 1 ' wr_en_mem $end
$var wire 1 & wr_mem_fwd $end
$var wire 32 W$ wr_mem_data [31:0] $end
$var wire 32 X$ wr_fwd_data [31:0] $end
$var wire 32 Y$ rd_mem_data [31:0] $end
$scope module ram $end
$var wire 1 $ clk $end
$var wire 1 % n_rst $end
$var wire 16 Z$ rd_addr [15:0] $end
$var wire 3 [$ rd_funct [2:0] $end
$var wire 16 \$ wr_addr [15:0] $end
$var wire 32 ]$ wr_data [31:0] $end
$var wire 1 ' wr_en $end
$var wire 3 ^$ wr_funct [2:0] $end
$var wire 1 _$ rw_data $end
$var wire 1 `$ rhu_data $end
$var wire 1 a$ rh_data $end
$var wire 1 b$ rbu_data $end
$var wire 1 c$ rb_data $end
$var parameter 48 d$ ram_len $end
$var reg 32 e$ rd_data [31:0] $end
$var integer 32 f$ i [31:0] $end
$upscope $end
$upscope $end
$scope module m_wb_reg $end
$var wire 1 $ clk $end
$var wire 2 g$ ctr [1:0] $end
$var wire 32 h$ in_alu_res [31:0] $end
$var wire 3 i$ in_instr_type [2:0] $end
$var wire 7 j$ in_opcode [6:0] $end
$var wire 32 k$ in_pc [31:0] $end
$var wire 5 l$ in_rd_id [4:0] $end
$var wire 32 m$ in_rd_mem_data [31:0] $end
$var wire 1 % n_rst $end
$var wire 32 n$ out_rd_mem_data [31:0] $end
$var wire 5 o$ out_rd_id [4:0] $end
$var wire 32 p$ out_pc [31:0] $end
$var wire 7 q$ out_opcode [6:0] $end
$var wire 3 r$ out_instr_type [2:0] $end
$var wire 32 s$ out_alu_res [31:0] $end
$scope module alu_res_reg $end
$var wire 1 $ clk $end
$var wire 2 t$ ctr [1:0] $end
$var wire 32 u$ in [31:0] $end
$var wire 1 % n_rst $end
$var wire 32 v$ out [31:0] $end
$var parameter 32 w$ bw $end
$var reg 32 x$ content [31:0] $end
$upscope $end
$scope module instr_type_reg $end
$var wire 1 $ clk $end
$var wire 2 y$ ctr [1:0] $end
$var wire 3 z$ in [2:0] $end
$var wire 1 % n_rst $end
$var wire 3 {$ out [2:0] $end
$var parameter 32 |$ bw $end
$var reg 3 }$ content [2:0] $end
$upscope $end
$scope module opcode_reg $end
$var wire 1 $ clk $end
$var wire 2 ~$ ctr [1:0] $end
$var wire 7 !% in [6:0] $end
$var wire 1 % n_rst $end
$var wire 7 "% out [6:0] $end
$var parameter 32 #% bw $end
$var reg 7 $% content [6:0] $end
$upscope $end
$scope module pc_reg $end
$var wire 1 $ clk $end
$var wire 2 %% ctr [1:0] $end
$var wire 32 &% in [31:0] $end
$var wire 1 % n_rst $end
$var wire 32 '% out [31:0] $end
$var parameter 32 (% bw $end
$var reg 32 )% content [31:0] $end
$upscope $end
$scope module rd_id_reg $end
$var wire 1 $ clk $end
$var wire 2 *% ctr [1:0] $end
$var wire 5 +% in [4:0] $end
$var wire 1 % n_rst $end
$var wire 5 ,% out [4:0] $end
$var parameter 32 -% bw $end
$var reg 5 .% content [4:0] $end
$upscope $end
$scope module rd_mem_data_reg $end
$var wire 1 $ clk $end
$var wire 2 /% ctr [1:0] $end
$var wire 32 0% in [31:0] $end
$var wire 1 % n_rst $end
$var wire 32 1% out [31:0] $end
$var parameter 32 2% bw $end
$var reg 32 3% content [31:0] $end
$upscope $end
$upscope $end
$scope module wb_stage $end
$var wire 32 4% alu_res [31:0] $end
$var wire 32 5% link_pc [31:0] $end
$var wire 1 4 mem2reg $end
$var wire 1 3 pc2reg $end
$var wire 32 6% rd_mem_data [31:0] $end
$var reg 32 7% wr_data [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 2%
b101 -%
b100000 (%
b111 #%
b11 |$
b100000 w$
b10000000000000000 d$
b10111000101110001011110111010001100101011100110111010000101111011101000110010101110011011101000101111101110101011101000111100101110000011001010101111101100010011010010110111000101110011101000111100001110100 R$
b100000 D$
b100000 ?$
b101 v#
b100000 q#
b101 l#
b100000 g#
b101 b#
b100000 ]#
b111 X#
b100000 S#
b11 N#
b100000 I#
b100 D#
b1 @#
b100000 =#
b101 `"
b100000 ["
b101 V"
b100000 Q"
b111 L"
b11 G"
b11 B"
b100000 ="
b1010 #
$end
#0
$dumpvars
b0 7%
b0 6%
b0 5%
b0 4%
b0 3%
b0 1%
b0x 0%
b0 /%
b0 .%
b0 ,%
b0 +%
b0 *%
b0 )%
b0 '%
b0 &%
b0 %%
b0 $%
b0 "%
b0 !%
b0 ~$
b0 }$
b0 {$
b0 z$
b0 y$
b0 x$
b0 v$
b0 u$
b0 t$
b0 s$
b0 r$
b0 q$
b0 p$
b0 o$
b0 n$
b0x m$
b0 l$
b0 k$
b0 j$
b0 i$
b0 h$
b0 g$
bx f$
b0x e$
xc$
xb$
xa$
x`$
x_$
b0 ^$
b0 ]$
b0 \$
b0 [$
b0 Z$
b0x Y$
b0 X$
b0 W$
b0 V$
b0 U$
b0 T$
b0 S$
b1 Q$
b1010001010010111 P$
b100 O$
b1000 N$
b1000 M$
b1010001010010111 L$
b100 K$
b0 J$
b0 I$
b0 H$
b0 G$
b0 F$
b0 E$
b100 C$
b0 B$
b0 A$
b0 @$
b1010001010010111 >$
b0 =$
b0 <$
b1010001010010111 ;$
b100 :$
b0 9$
b0 8$
b0 7$
bx 6$
b0 5$
b0 4$
b0 3$
b0 2$
b0 1$
b0 0$
bx /$
b110 .$
b0 -$
b0 ,$
b0 +$
b110 *$
b0 )$
b0 ($
b0 '$
b0 &$
b110 %$
b100 $$
b0 #$
b0 "$
b0 !$
b0 ~#
b0 }#
b0 |#
b0 {#
b0 z#
b0 y#
b0 x#
b0 w#
b0 u#
b0 t#
b0 s#
b0 r#
b0 p#
b0 o#
b0 n#
b0 m#
b0 k#
b0 j#
b0 i#
b0 h#
b0 f#
b0 e#
b0 d#
b0 c#
b0 a#
b0 `#
b0 _#
b0 ^#
b0 \#
b0 [#
b0 Z#
b0 Y#
b0 W#
b0 V#
b0 U#
b0 T#
b100 R#
b0 Q#
b0 P#
b0 O#
b110 M#
b0 L#
b0 K#
b0 J#
b0 H#
b0 G#
b0 F#
b0 E#
b0 C#
b0 B#
b0 A#
b0 ?#
b0 >#
b0 <#
b0 ;#
b0 :#
b0 9#
b0 8#
b0 7#
b110 6#
b100 5#
b0 4#
b0 3#
b0 2#
b0 1#
b0 0#
b0 /#
b0 .#
b0 -#
b0 ,#
b0 +#
b0 *#
b0 )#
b0 (#
b0 '#
b0 &#
b0 %#
b0 $#
b0 ##
b0 "#
b0 !#
b0 ~"
b0 }"
b0 |"
b1111 {"
b0 z"
b0 y"
b1111 x"
0w"
b0 v"
b0 u"
b0 t"
b0 s"
b0 r"
b0 q"
b0 p"
b0 o"
b0 n"
b0 m"
b0 l"
b0 k"
b0 j"
b0 i"
b0 h"
b0 g"
b0 f"
b0 e"
b0 d"
b0 c"
0b"
b0 a"
b0 _"
b0 ^"
b0 ]"
b0 \"
b0 Z"
b0 Y"
b0 X"
b0 W"
b0 U"
b0 T"
b0 S"
b0 R"
b0 P"
b0 O"
b0 N"
b0 M"
b0 K"
b0 J"
b0 I"
b0 H"
b0 F"
b0 E"
b0 D"
b0 C"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b110 ("
b0 '"
b110 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
0|
0{
b110 z
b0 y
b0 x
b0 w
b0 v
0u
0t
0s
b0 r
b0 q
b0 p
b110 o
b0 n
b0 m
zl
b0 k
b0 j
b1 i
0h
0g
0f
1e
0d
b0 c
1b
0a
b0 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
0P
b0 O
b0 N
b0 M
b0 L
b110 K
b100 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b1010001010010111 @
b100 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0x 8
b0 7
b0 6
b0 5
04
03
02
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
0(
0'
0&
1%
1$
b1 "
b0 !
$end
#1
0$
#2
b1010000000000000 M
b1010000000000000 7#
b1010000000000000 H#
b1010000000000000 '$
b1010000000000000 )$
b1010000000000000 ,$
bx F
bx 1#
bx f#
bx ~#
bx 5$
b100 K
b100 6#
b100 M#
b100 %$
b100 *$
b100 .$
b101 G
b101 2#
b101 a#
b101 "$
b10 N
b10 8#
b10 C#
b10 ($
b1 E
b1 0#
b1 k#
b1 }#
b1 0$
b10111 I
b10111 v
b10111 4#
b10111 W#
b10111 #$
b10111 -$
b10111 I$
b1001100110111 @
b1001100110111 ;$
b1001100110111 >$
b1001100110111 L$
b1001100110111 P$
b10 Q$
b1100 M$
b1100 N$
b0x *
b0x X$
b0x n$
b0x 1%
b0x 3%
b0x 6%
b110 \
b110 8"
b110 F"
b110 o"
b110 *#
b110 L#
b110 O#
b100 [
b100 6"
b100 P"
b100 )#
b100 Q#
b100 F$
b100 T#
b1000 J
b1000 5#
b1000 R#
b1000 $$
b1010000000000100 B
b1010000000000100 9#
b1010000000000100 <#
b1010000000000100 z#
b1010000000000100 J$
b100 H
b100 3#
b100 \#
b100 !$
b100 8$
b100 B$
b100 E$
b1010001010010111 L
b1010001010010111 &$
b1010001010010111 +$
b1010001010010111 9$
b1010001010010111 =$
b1010001010010111 @$
b1000 ?
b1000 :$
b1000 C$
b1000 K$
b1000 O$
b10 "
b10 i
1$
#3
0$
#4
b1010000000000000 u"
b1010000000000000 }"
0b
1f
b0 F
b0 1#
b0 f#
b0 ~#
b0 5$
0e
b1010000000000100 c
b1010000000000100 9"
b1010000000000100 <"
b1010000000000100 t"
b1010000000000100 ~"
b101000110000001100010011 @
b101000110000001100010011 ;$
b101000110000001100010011 >$
b101000110000001100010011 L$
b101000110000001100010011 P$
b11 Q$
b110 G
b110 2#
b110 a#
b110 "$
b1 N
b1 8#
b1 C#
b1 ($
b0 E
b0 0#
b0 k#
b0 }#
b0 0$
b110111 I
b110111 v
b110111 4#
b110111 W#
b110111 #$
b110111 -$
b110111 I$
b1000000000000 M
b1000000000000 7#
b1000000000000 H#
b1000000000000 '$
b1000000000000 )$
b1000000000000 ,$
bx _
bx e"
bx y"
b100 v"
b100 |"
b100 z
b100 &"
b1010000000000100 Q
b1010000000000100 H$
b10000 M$
b10000 N$
b10 k
b10 *"
b10 @"
b0 x"
b0 {"
b1100 ?
b1100 :$
b1100 C$
b1100 K$
b1100 O$
b1001100110111 L
b1001100110111 &$
b1001100110111 +$
b1001100110111 9$
b1001100110111 =$
b1001100110111 @$
b1100 J
b1100 5#
b1100 R#
b1100 $$
b1000000001000 B
b1000000001000 9#
b1000000001000 <#
b1000000001000 z#
b1000000001000 J$
b1000 H
b1000 3#
b1000 \#
b1000 !$
b1000 8$
b1000 B$
b1000 E$
b1 T
b1 x
b1 s"
b1 $#
b1 j#
b1 m#
b101 W
b101 5"
b101 U"
b101 &#
b101 `#
b101 c#
bx U
bx l"
bx %#
bx e#
bx h#
b1010000000000000 ]
b1010000000000000 p"
b1010000000000000 +#
b1010000000000000 G#
b1010000000000000 J#
b100 X
b100 m"
b100 '#
b100 [#
b100 ^#
1h
b10111 Y
b10111 y
b10111 %"
b10111 7"
b10111 K"
b10111 n"
b10111 (#
b10111 V#
b10111 Y#
b10111 G$
b1010000000000100 V
b1010000000000100 -#
b1010000000000100 ;#
b1010000000000100 >#
b1000 [
b1000 6"
b1000 P"
b1000 )#
b1000 Q#
b1000 F$
b1000 T#
b100 \
b100 8"
b100 F"
b100 o"
b100 *#
b100 L#
b100 O#
b10 `
b10 q"
b10 ,#
b10 B#
b10 E#
b100 ;
b100 ."
b100 O"
b100 k$
b100 &%
b100 R"
b110 <
b110 0"
b110 E"
b110 i$
b110 z$
b110 H"
b11 "
b11 i
1$
#5
0$
#6
0b
0d
1b"
1e
b1000000000000 c
b1000000000000 9"
b1000000000000 <"
b1000000000000 t"
b1000000000000 ~"
bx D
bx /#
bx p#
bx |#
bx 4$
bx F
bx 1#
bx f#
bx ~#
bx 5$
b1 K
b1 6#
b1 M#
b1 %$
b1 *$
b1 .$
b1010000000000100 Z$
b1010000000000100 \$
b1 k
b1 *"
b1 @"
b1000000001000 Q
b1000000001000 H$
b0 v"
b0 |"
b1000000000000 u"
b1000000000000 }"
b0 _
b0 e"
b0 y"
b0 N
b0 8#
b0 C#
b0 ($
b1010 C
b1010 .#
b1010 u#
b1010 {#
b1010 1$
b110 E
b110 0#
b110 k#
b110 }#
b110 0$
b10011 I
b10011 v
b10011 4#
b10011 W#
b10011 #$
b10011 -$
b10011 I$
b1010 M
b1010 7#
b1010 H#
b1010 '$
b1010 )$
b1010 ,$
bx @
bx ;$
bx >$
bx L$
bx P$
b100 Q$
b10100 M$
b10100 N$
b110 .
b110 r$
b110 {$
b110 }$
b100 -
b100 p$
b100 '%
b100 5%
b100 )%
b10 =
b10 1"
b10 A"
b10 T$
b10 [$
b10 ^$
b10 C"
b100 <
b100 0"
b100 E"
b100 i$
b100 z$
b100 H"
b1010000000000100 U$
b1010000000000100 >
b1010000000000100 2"
b1010000000000100 ;"
b1010000000000100 >"
b1010000000000100 c"
b1010000000000100 S$
b1010000000000100 h$
b1010000000000100 u$
b10111 :
b10111 r
b10111 /"
b10111 J"
b10111 M"
b10111 j$
b10111 !%
b1000 ;
b1000 ."
b1000 O"
b1000 k$
b1000 &%
b1000 R"
b101 9
b101 q
b101 -"
b101 T"
b101 W"
b101 d"
b101 l$
b101 +%
b1 `
b1 q"
b1 ,#
b1 B#
b1 E#
b1100 [
b1100 6"
b1100 P"
b1100 )#
b1100 Q#
b1100 F$
b1100 T#
b1000000001000 V
b1000000001000 -#
b1000000001000 ;#
b1000000001000 >#
0h
1g
b110111 Y
b110111 y
b110111 %"
b110111 7"
b110111 K"
b110111 n"
b110111 (#
b110111 V#
b110111 Y#
b110111 G$
b1000 X
b1000 m"
b1000 '#
b1000 [#
b1000 ^#
b1000000000000 ]
b1000000000000 p"
b1000000000000 +#
b1000000000000 G#
b1000000000000 J#
b0 U
b0 l"
b0 %#
b0 e#
b0 h#
b110 W
b110 5"
b110 U"
b110 &#
b110 `#
b110 c#
b0 T
b0 x
b0 s"
b0 $#
b0 j#
b0 m#
b10000 J
b10000 5#
b10000 R#
b10000 $$
b10110 B
b10110 9#
b10110 <#
b10110 z#
b10110 J$
b1100 H
b1100 3#
b1100 \#
b1100 !$
b1100 8$
b1100 B$
b1100 E$
b101000110000001100010011 L
b101000110000001100010011 &$
b101000110000001100010011 +$
b101000110000001100010011 9$
b101000110000001100010011 =$
b101000110000001100010011 @$
b10000 ?
b10000 :$
b10000 C$
b10000 K$
b10000 O$
b100 "
b100 i
1$
#7
0$
#8
x{
xu
1(
b110 K
b110 6#
b110 M#
b110 %$
b110 *$
b110 .$
0P
b1000000001010 c
b1000000001010 9"
b1000000001010 <"
b1000000001010 t"
b1000000001010 ~"
b1000000000000 v"
b1000000000000 |"
0b"
0e
b101 Q$
bx G
bx 2#
bx a#
bx "$
b0xxx N
b0xxx 8#
b0xxx C#
b0xxx ($
bx C
bx .#
bx u#
bx {#
bx 1$
bx E
bx 0#
bx k#
bx }#
bx 0$
bx I
bx v
bx 4#
bx W#
bx #$
bx -$
bx I$
b0 M
b0 7#
b0 H#
b0 '$
b0 )$
b0 ,$
b1010 u"
b1010 }"
b1 z
b1 &"
b10110 Q
b10110 H$
b11000 M$
b11000 N$
b0 k
b0 *"
b0 @"
bx ^
bx 4"
bx Z"
bx f"
bx z"
b1000000000000 _
b1000000000000 e"
b1000000000000 y"
b1000000000000 Z$
b1000000000000 \$
b1 1
b1 #"
b1 g"
b100 o
b100 ("
b1010000000000100 )
b1010000000000100 j"
b1010000000000100 y#
b1010000000000100 3$
b1010000000000100 7%
b10100 ?
b10100 :$
b10100 C$
b10100 K$
b10100 O$
bx L
bx &$
bx +$
bx 9$
bx =$
bx @$
b10100 J
b10100 5#
b10100 R#
b10100 $$
b10000 B
b10000 9#
b10000 <#
b10000 z#
b10000 J$
b10000 H
b10000 3#
b10000 \#
b10000 !$
b10000 8$
b10000 B$
b10000 E$
b110 T
b110 x
b110 s"
b110 $#
b110 j#
b110 m#
b1010 R
b1010 w
b1010 3"
b1010 _"
b1010 r"
b1010 "#
b1010 t#
b1010 w#
bx U
bx l"
bx %#
bx e#
bx h#
bx S
bx k"
bx ##
bx o#
bx r#
b1010 ]
b1010 p"
b1010 +#
b1010 G#
b1010 J#
b1100 X
b1100 m"
b1100 '#
b1100 [#
b1100 ^#
0g
b10011 Y
b10011 y
b10011 %"
b10011 7"
b10011 K"
b10011 n"
b10011 (#
b10011 V#
b10011 Y#
b10011 G$
b10110 V
b10110 -#
b10110 ;#
b10110 >#
b10000 [
b10000 6"
b10000 P"
b10000 )#
b10000 Q#
b10000 F$
b10000 T#
b1 \
b1 8"
b1 F"
b1 o"
b1 *#
b1 L#
b1 O#
b0 `
b0 q"
b0 ,#
b0 B#
b0 E#
b110 9
b110 q
b110 -"
b110 T"
b110 W"
b110 d"
b110 l$
b110 +%
b1100 ;
b1100 ."
b1100 O"
b1100 k$
b1100 &%
b1100 R"
b110111 :
b110111 r
b110111 /"
b110111 J"
b110111 M"
b110111 j$
b110111 !%
b1000000000000 U$
b1000000000000 >
b1000000000000 2"
b1000000000000 ;"
b1000000000000 >"
b1000000000000 c"
b1000000000000 S$
b1000000000000 h$
b1000000000000 u$
b1 =
b1 1"
b1 A"
b1 T$
b1 [$
b1 ^$
b1 C"
b101 +
b101 m
b101 i"
b101 x#
b101 2$
b101 o$
b101 ,%
b101 .%
b1000 -
b1000 p$
b1000 '%
b1000 5%
b1000 )%
b10111 ,
b10111 n
b10111 '"
b10111 q$
b10111 "%
b10111 $%
b1010000000000100 /
b1010000000000100 s$
b1010000000000100 v$
b1010000000000100 4%
b1010000000000100 x$
b100 .
b100 r$
b100 {$
b100 }$
b101 "
b101 i
1$
#9
b1010000000000100 /$
0$
#10
1b
0f
xb"
xt
b0 c
b0 9"
b0 <"
b0 t"
b0 ~"
b1000000000000 )
b1000000000000 j"
b1000000000000 y#
b1000000000000 3$
b1000000000000 7%
bx _
bx e"
bx y"
b1000000001010 Z$
b1000000001010 \$
bx W$
bx ]$
bx k
bx *"
bx @"
bx v"
bx |"
b0x0000 Q
b0x0000 H$
b110 z
b110 &"
b1111 x"
b1111 {"
bx u"
bx }"
b0 1
b0 #"
b0 g"
b110 Q$
b11100 M$
b11100 N$
b1000000000000 /
b1000000000000 s$
b1000000000000 v$
b1000000000000 4%
b1000000000000 x$
b110111 ,
b110111 n
b110111 '"
b110111 q$
b110111 "%
b110111 $%
b1100 -
b1100 p$
b1100 '%
b1100 5%
b1100 )%
b110 +
b110 m
b110 i"
b110 x#
b110 2$
b110 o$
b110 ,%
b110 .%
b0 =
b0 1"
b0 A"
b0 T$
b0 [$
b0 ^$
b0 C"
b1 <
b1 0"
b1 E"
b1 i$
b1 z$
b1 H"
b1000000001010 U$
b1000000001010 >
b1000000001010 2"
b1000000001010 ;"
b1000000001010 >"
b1000000001010 c"
b1000000001010 S$
b1000000001010 h$
b1000000001010 u$
b10011 :
b10011 r
b10011 /"
b10011 J"
b10011 M"
b10011 j$
b10011 !%
b10000 ;
b10000 ."
b10000 O"
b10000 k$
b10000 &%
b10000 R"
bx 7
bx ,"
bx Y"
bx \"
bx V$
b1010 6
b1010 p
b1010 +"
b1010 ^"
b1010 a"
b0xxx `
b0xxx q"
b0xxx ,#
b0xxx B#
b0xxx E#
b110 \
b110 8"
b110 F"
b110 o"
b110 *#
b110 L#
b110 O#
b10100 [
b10100 6"
b10100 P"
b10100 )#
b10100 Q#
b10100 F$
b10100 T#
b10000 V
b10000 -#
b10000 ;#
b10000 >#
xh
xg
bx Y
bx y
bx %"
bx 7"
bx K"
bx n"
bx (#
bx V#
bx Y#
bx G$
b10000 X
b10000 m"
b10000 '#
b10000 [#
b10000 ^#
b0 ]
b0 p"
b0 +#
b0 G#
b0 J#
bx W
bx 5"
bx U"
bx &#
bx `#
bx c#
bx R
bx w
bx 3"
bx _"
bx r"
bx "#
bx t#
bx w#
bx T
bx x
bx s"
bx $#
bx j#
bx m#
b11000 J
b11000 5#
b11000 R#
b11000 $$
b10100 B
b10100 9#
b10100 <#
b10100 z#
b10100 J$
b10100 H
b10100 3#
b10100 \#
b10100 !$
b10100 8$
b10100 B$
b10100 E$
b11000 ?
b11000 :$
b11000 C$
b11000 K$
b11000 O$
b1 !
b1 j
b110 "
b110 i
1$
#11
0$
#12
xs
b111 Q$
b0x0x00 Q
b0x0x00 H$
b100000 M$
b100000 N$
b0 Z$
b0 \$
b1 o
b1 ("
b1000000001010 )
b1000000001010 j"
b1000000001010 y#
b1000000001010 3$
b1000000001010 7%
b11100 ?
b11100 :$
b11100 C$
b11100 K$
b11100 O$
b11100 J
b11100 5#
b11100 R#
b11100 $$
b11000 B
b11000 9#
b11000 <#
b11000 z#
b11000 J$
b11000 H
b11000 3#
b11000 \#
b11000 !$
b11000 8$
b11000 B$
b11000 E$
b10100 X
b10100 m"
b10100 '#
b10100 [#
b10100 ^#
b10100 V
b10100 -#
b10100 ;#
b10100 >#
b11000 [
b11000 6"
b11000 P"
b11000 )#
b11000 Q#
b11000 F$
b11000 T#
bx 9
bx q
bx -"
bx T"
bx W"
bx d"
bx l$
bx +%
bx 6
bx p
bx +"
bx ^"
bx a"
b10100 ;
b10100 ."
b10100 O"
b10100 k$
b10100 &%
b10100 R"
x'
bx :
bx r
bx /"
bx J"
bx M"
bx j$
bx !%
b0 U$
b0 >
b0 2"
b0 ;"
b0 >"
b0 c"
b0 S$
b0 h$
b0 u$
b110 <
b110 0"
b110 E"
b110 i$
b110 z$
b110 H"
bx =
bx 1"
bx A"
bx T$
bx [$
bx ^$
bx C"
b10000 -
b10000 p$
b10000 '%
b10000 5%
b10000 )%
b10011 ,
b10011 n
b10011 '"
b10011 q$
b10011 "%
b10011 $%
b1000000001010 /
b1000000001010 s$
b1000000001010 v$
b1000000001010 4%
b1000000001010 x$
b1 .
b1 r$
b1 {$
b1 }$
b10 !
b10 j
b111 "
b111 i
1$
#13
0$
#14
0(
x&
x3
b110 o
b110 ("
b0 )
b0 j"
b0 y#
b0 3$
b0 7%
b0xx000 Q
b0xx000 H$
b1000 Q$
b100100 M$
b100100 N$
b110 .
b110 r$
b110 {$
b110 }$
b0 /
b0 s$
b0 v$
b0 4%
b0 x$
x4
bx ,
bx n
bx '"
bx q$
bx "%
bx $%
b10100 -
b10100 p$
b10100 '%
b10100 5%
b10100 )%
bx +
bx m
bx i"
bx x#
bx 2$
bx o$
bx ,%
bx .%
b11000 ;
b11000 ."
b11000 O"
b11000 k$
b11000 &%
b11000 R"
b11100 [
b11100 6"
b11100 P"
b11100 )#
b11100 Q#
b11100 F$
b11100 T#
b11000 V
b11000 -#
b11000 ;#
b11000 >#
b11000 X
b11000 m"
b11000 '#
b11000 [#
b11000 ^#
b100000 J
b100000 5#
b100000 R#
b100000 $$
b11100 B
b11100 9#
b11100 <#
b11100 z#
b11100 J$
b11100 H
b11100 3#
b11100 \#
b11100 !$
b11100 8$
b11100 B$
b11100 E$
b100000 ?
b100000 :$
b100000 C$
b100000 K$
b100000 O$
b11 !
b11 j
b1000 "
b1000 i
1$
#15
0$
#16
b1001 Q$
b0xxx00 Q
b0xxx00 H$
b101000 M$
b101000 N$
b100100 ?
b100100 :$
b100100 C$
b100100 K$
b100100 O$
b100100 J
b100100 5#
b100100 R#
b100100 $$
b100000 B
b100000 9#
b100000 <#
b100000 z#
b100000 J$
b100000 H
b100000 3#
b100000 \#
b100000 !$
b100000 8$
b100000 B$
b100000 E$
b11100 X
b11100 m"
b11100 '#
b11100 [#
b11100 ^#
b11100 V
b11100 -#
b11100 ;#
b11100 >#
b100000 [
b100000 6"
b100000 P"
b100000 )#
b100000 Q#
b100000 F$
b100000 T#
b11100 ;
b11100 ."
b11100 O"
b11100 k$
b11100 &%
b11100 R"
b11000 -
b11000 p$
b11000 '%
b11000 5%
b11000 )%
b1001 "
b1001 i
1$
#17
0$
#18
b0x00000 Q
b0x00000 H$
b1010 Q$
b101100 M$
b101100 N$
b11100 -
b11100 p$
b11100 '%
b11100 5%
b11100 )%
b100000 ;
b100000 ."
b100000 O"
b100000 k$
b100000 &%
b100000 R"
b100100 [
b100100 6"
b100100 P"
b100100 )#
b100100 Q#
b100100 F$
b100100 T#
b100000 V
b100000 -#
b100000 ;#
b100000 >#
b100000 X
b100000 m"
b100000 '#
b100000 [#
b100000 ^#
b101000 J
b101000 5#
b101000 R#
b101000 $$
b100100 B
b100100 9#
b100100 <#
b100100 z#
b100100 J$
b100100 H
b100100 3#
b100100 \#
b100100 !$
b100100 8$
b100100 B$
b100100 E$
b101000 ?
b101000 :$
b101000 C$
b101000 K$
b101000 O$
b1010 "
b1010 i
1$
#19
0$
#20
b1011 Q$
b0x00x00 Q
b0x00x00 H$
b110000 M$
b110000 N$
b101100 ?
b101100 :$
b101100 C$
b101100 K$
b101100 O$
b101100 J
b101100 5#
b101100 R#
b101100 $$
b101000 B
b101000 9#
b101000 <#
b101000 z#
b101000 J$
b101000 H
b101000 3#
b101000 \#
b101000 !$
b101000 8$
b101000 B$
b101000 E$
b100100 X
b100100 m"
b100100 '#
b100100 [#
b100100 ^#
b100100 V
b100100 -#
b100100 ;#
b100100 >#
b101000 [
b101000 6"
b101000 P"
b101000 )#
b101000 Q#
b101000 F$
b101000 T#
b100100 ;
b100100 ."
b100100 O"
b100100 k$
b100100 &%
b100100 R"
b100000 -
b100000 p$
b100000 '%
b100000 5%
b100000 )%
1$
